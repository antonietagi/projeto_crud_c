#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <locale.h>

// Estrutura para armazenar dados de um produto
typedef struct {
    char nome[50];
    float preco;
    int quantidade;
} Produto;

// Estrutura para armazenar dados de um pedido
typedef struct {
    int id;
    Produto produtos[99];
    int numProdutos; 
    float total;
} Pedido;

// Função para salvar os dados do produto em um arquivo de texto formatado
void cadastrarProduto(Produto produto) {
    FILE *arquivo = fopen("produtos.txt", "a+"); // Leitura e append

    if (arquivo == NULL) {
        printf("Erro ao abrir o arquivo para salvar o produto.\n");
        return;
    }

    // Verifica se o arquivo está vazio e imprime o cabeçalho
    fseek(arquivo, 0, SEEK_END);
    long tamanho = ftell(arquivo);

    if (tamanho == 0) {
        fprintf(arquivo, "=======================================\n");
        fprintf(arquivo, "\tREQUISICAO DE PRODUTOS\n");
        fprintf(arquivo, "=======================================\n\n");
    }
    // Preenche os dados no arquivo .txt
    fprintf(arquivo, "Nome do Produto.:\t %-30s\n", produto.nome);
    fprintf(arquivo, "Valor...........:\t R$ %.2f\n", produto.preco);
    fprintf(arquivo, "Quantidade......:\t %d\n", produto.quantidade);
    fprintf(arquivo, "---------------------------------------\n");

    fclose(arquivo);
}
int main() {
    setlocale(LC_ALL, "Portuguese");

    Pedido pedidos[99];
    int id = 0, ativo = 1, c, i, j;

    while (ativo) {
        system(“cls”);
        printf("=======================================\n");
        printf("\tREQUISIÇÃO DE PRODUTOS\n");
        printf("=======================================\n\n");
        printf("[ 1 ] - Cadastrar pedido(s)");
        printf("\n[ 2 ] - Listar pedido(s)");
        printf("\n[ 3 ] - Sair");
        printf("\n\nEscolha uma opção: ");

        int opcao;
        scanf("%d", &opcao);
        while ((c = getchar()) != '\n' && c != EOF); // Limpa buffer

        switch (opcao) {
            case 1: {
                system("cls");

                printf("\t  ID DO PEDIDO: %d", id + 1);
                printf("\n=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+");
                pedidos[id].id = id;
                pedidos[id].numProdutos = 0;
                float total = 0;

                for (i = 0; i < 99; i++) {
                    printf("\n#Produto %d", i + 1);

                    printf("\nDigite o nome do produto: ");
                    char nome[50];
                    fgets(nome, sizeof(nome), stdin);
                    nome[strcspn(nome, "\n")] = 0;  // remove '\n'

                    printf("Digite o valor do produto: ");
                    float preco;
                    scanf("%f", &preco);

                    printf("Digite a quantidade do produto: ");
                    int quantidade;
                    scanf("%d", &quantidade);
                    while ((c = getchar()) != '\n' && c != EOF); // limpa buffer

                    Produto produto;
                    strcpy(produto.nome, nome);
                    produto.preco = preco;
                    produto.quantidade = quantidade;

                    pedidos[id].produtos[i] = produto;
                    pedidos[id].numProdutos++;

                    total += preco * quantidade;

                    cadastrarProduto(produto);

                    printf("\nDeseja adicionar outro produto? [s/n] ");
                    char novoProduto;
                    scanf(" %c", &novoProduto);
                    while ((c = getchar()) != '\n' && c != EOF);

                    if (novoProduto != 's' && novoProduto != 'S') {
                        break;
                    }
                    printf("-------------------------------------------");
                }
                pedidos[id].total = total;
                id++;
                break;
            }
            case 2: {
                system("cls");
                float totalGeral = 0;

                for ( i = 0; i < id; i++) {
                    printf("\tID DO PEDIDO: %d\n", i + 1);
                    for ( j = 0; j < pedidos[i].numProdutos; j++) {
                        printf("\n----------------------------------");
                        printf("\n#Produto %d", j + 1);
                        printf("\nNome.......:\t %s", pedidos[i].produtos[j].nome);
                        printf("\nValor......:\t R$ %.2f", pedidos[i].produtos[j].preco);
                        printf("\nQuantidade.:\t %d", pedidos[i].produtos[j].quantidade);

                    }
                    printf("\n==================================");
                    printf("\nTotal do pedido: R$%.2f", pedidos[i].total);
                    totalGeral += pedidos[i].total;
                    printf("\n==================================\n\n");
                }
                printf("\n- Total geral: R$%.2f\n", totalGeral);
                printf("\nPressione ENTER para continuar...");
                getchar();
                break;
            }
            case 3:
                ativo = 0;
                break;
                
            default:
                printf("\nOpção inválida. Pressione ENTER para continuar...");
                getchar();
                break;
        }
    }
    return 0;
}
